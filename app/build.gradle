plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdk 32

    viewBinding{
        enabled = true
    }

    dataBinding{
        enabled = true
    }

    kotlinOptions{
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    // info
    def client_id = properties.getProperty("CLIENT_ID")
    def client_secret = properties.getProperty("CLIENT_SECRET")
    def accept = properties.getProperty("ACCEPT")
    def host = properties.getProperty("HOST")

    // url
    def login_url = properties.getProperty("LOGIN_URL")
    def base_url = properties.getProperty("BASE_URL")
    def token_url = properties.getProperty("TOKEN_URL")
    def issue_url = properties.getProperty("ISSUE_URL")
    def user_url = properties.getProperty("USER_URL")
    def user_starred_url = properties.getProperty("USER_STARRED_URL")
    def notifications_url = properties.getProperty("NOTIFICATIONS_URL")
    def notifications_read_url = properties.getProperty("NOTIFICATIONS_READ_URL")
    def comments_url = properties.getProperty("COMMENTS_URL")

    // param
    def state_param = properties.getProperty("STATE_PARAM")
    def filter_param = properties.getProperty("FILTER_PARAM")
    def client_id_param = properties.getProperty("CLIENT_ID_PARAM")
    def client_secret_param = properties.getProperty("CLIENT_SECRET_PARAM")
    def code_param = properties.getProperty("CODE_PARAM")

    // path
    def owner_path = properties.getProperty("OWNER_PATH")
    def repo_path = properties.getProperty("REPO_PATH")
    def id_path = properties.getProperty("ID_PATH")

    // header
    def accept_header = properties.getProperty("ACCEPT_HEADER")
    def authorization_header = properties.getProperty("AUTHORIZATION_HEADER")

    defaultConfig {
        applicationId "com.example.android_repo_04"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", 'CLIENT_ID', client_id
        buildConfigField "String", 'CLIENT_SECRET', client_secret
        buildConfigField "String", 'LOGIN_URL', login_url
        buildConfigField "String", 'BASE_URL', base_url
        buildConfigField "String", 'TOKEN_URL', token_url
        buildConfigField "String", 'ISSUE_URL', issue_url
        buildConfigField "String", 'USER_URL', user_url
        buildConfigField "String", 'USER_STARRED_URL', user_starred_url
        buildConfigField "String", 'NOTIFICATIONS_URL', notifications_url
        buildConfigField "String", 'NOTIFICATIONS_READ_URL', notifications_read_url
        buildConfigField "String", 'COMMENTS_URL', comments_url
        buildConfigField "String", 'STATE_PARAM', state_param
        buildConfigField "String", 'FILTER_PARAM', filter_param
        buildConfigField "String", 'CLIENT_ID_PARAM', client_id_param
        buildConfigField "String", 'CLIENT_SECRET_PARAM', client_secret_param
        buildConfigField "String", 'CODE_PARAM', code_param
        buildConfigField "String", 'OWNER_PATH', owner_path
        buildConfigField "String", 'REPO_PATH', repo_path
        buildConfigField "String", 'ID_PATH', id_path
        buildConfigField "String", 'ACCEPT_HEADER', accept_header
        buildConfigField "String", 'AUTHORIZATION_HEADER', authorization_header
        buildConfigField "String", 'ACCEPT', accept
        manifestPlaceholders = [HOST: host]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    //CircleImageView
    implementation "de.hdodenhof:circleimageview:${circle_imageview_version}"

    //KotPref
    implementation "com.chibatching.kotpref:kotpref:${kotpref_version}"

    //Glide
    implementation "com.github.bumptech.glide:glide:${glide_version}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glide_version}"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    //okhttp3
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //ktx
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel_ktx_version"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}